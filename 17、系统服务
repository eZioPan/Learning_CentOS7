系统服务（serive），就是常驻内存的一些程序（daemon）

CentOS7 所使用的启动服务管理机制为 systemd


systemd 的新特性

(1) 平行服务启动流程，加速开机

(2) 全局控制，常驻内存，若要启动服务时， 会立刻被 systemd 相应

(3) 自动检查服务相关性，自动启动依赖的服务

(4) 详细的 daemon 分类：将一个服务(service，可能包含多个命令)定义为一个 unit
						又将不同 unit 分类为不同的 type

(5) 兼容旧版的 init 启动脚本


注意！不由 systemctl 命令启动的服务，无法被 systemd 管理



systemd 的设置文件

/usr/lib/systemd/system/
每个服务的主要启动配置文件

/run/systemd/system/
系统在使用过程中产生的服务脚本
优先级比 /usr/lib/systemd/system/ 的高

/etc/systemd/system/
管理员为系统创建的服务脚本
优先级比 /run/systemd/system/ 的高



systemd 的 unit 的 type 分类

在 /usr/lib/systemd/system/ 下的文件中的 后缀名，就是 unit 的 type


.service	系统服务，各种本机服务和网络服务都属于这类，是最常见的类型

.socket		套字节服务，一般用于 监听文件或端口，启动相关的服务
			（IPC Inter-process communication）

.target		执行环境，设定当前系统运行的状态（会调用相关的 .sevice 和 .socket 服务）

.mount		挂载的相关的服务
.automount

.path		文件监控服务，比如打印机的队列任务，就需要文件监控服务

.timer		循环执行服务



systemctl 管理服务的命令

systemctl [option] [command] [NAME ...]

不加任何参数时，等价于 systemctl list-units

[option]
-t, --type=<type1>[,<type2>,<type3>...]
	仅显示/修改 指定类型的 unit
-a, --all
	显示所有已经 loaded 的 unit
-n, --lines=<num>
	与 status 连用，指定 显示多少行 service 的 log
--reverse
	与 list-dependencies 连用，获取调用了指定 unit 的 unit
--plain
	与 list-dependencies 连用，去掉 unit 运行状态灯，用空格表示依赖树

[command] 部分可用命令

start		立即启动指定的 unit
stop		立即停止指定的 unit
restart		立即重启指定的 unit（也即 stop 后立刻 start）
reload		不关闭指定的 unit，但重读设置文件
enable		开启自动启动指定的 unit
disable		开机不自动启动指定的 unit

mask		完全禁止一个 unit 被使用
			也即，从 /dev/null 软链接至 /etc/systemd/system/ 下一个与指定 unit 同名的文件
			来屏蔽 unit 的文件
unmask		解禁一个 unit
			也即，移除 /dev/null 至 /etc/systemd/system/ 下的链接

status		以 人类可读 的方式查看指定的 unit 的状态
show		以 数据列表 的方式查看指定的 unit 的状态
is-active	检查指定的 unit 是否运行
is-failed	检查指定的 unit 是否失败
is-enabled	检查指定的 unit 是否开机自动启动

list-units	罗列所有已经 loaded 且处于 active 状态的 unit
			若加上 -a 参数，罗列所有 loaded 的 unit
list-unit-files	罗列所有的 unit 文件，以及当前的状态
list-dependencies 罗列指定 unit 的依赖 unit
list-sockets 罗列 socket 类型的 unit 的数据

get-default	获取启动时默认进入的模式（target）
set-default	修改启动时默认进入的模式（target）
isolate		关闭其他的 target，仅加载指定的 target

poweroff	关机
reboot		重启
suspend		挂起：将系统的运行状态存储至 内存 中，并关闭大部分的硬件设备
hibernate	休眠：将系统的运行状态存储至 硬盘 中，并关闭所有的硬件设备
rescue		救援
emergency	紧急救援



systemctl status 详解

EG. 以 systemctl status 查看 atd 服务的运行状态

systemctl status atd.service

# 返回数据如下

atd.service -Jpb spooling tools
	Loaded: loaded (/usr/lib/systemd/system/atd.service; enabled; vendor preset: enabled)
	Active: active (running) since Mon 2016-10-31 13:41:41 CST; 1h 24min ago
Main PID: 1496 (atd)
   CGroup: /system.slice/atd.service
           └─1496 /usr/sbin/atd -f

Oct 31 13:41:41 ePCt.eP systemd[1]: Started Job spooling tools.
Oct 31 13:41:41 ePCt.eP systemd[1]: Starting Job spooling tools...


第 1 行：服务的名字以及简介

第 2 行：服务的加载状态
			第一个参数：
				loaded 当前服务未被 mask
				masked 当前服务被 mask
			第二个参数：
				该服务的 配置文件 所在路径
			第三个参数：
				enable 该服务 开机 自动加载
				diable 该服务 开机 不自动加载
				static 该服务不可自动启动，但可被其他服务唤醒
			第四个参数：
				提供商预设（内容未知）

第 3 行：服务的运行状态
			第一个参数：
				active (running)	正在运行的服务
				active (waiting)	等待中的服务
				active (exited)		运行成功并正常退出的服务
				active (listening)	服务正在监听端口
				inactive (dead)		未运行的服务
				failed (Reslt: exit-code)	运行失败的服务
			第二个参数：
				从何时开始进入该状态
			第三个参数：
				到目前为止，已经在这个状态停留了多少时间

第 4 行：服务的所使用的主要程序的 PID 以及 进程名

第 5 行：Control Group 的分组状态

第 6 行：该服务使用到的各种程序的 PID 以及对应的 调用命令

第 8 行：会显示最后十个 service 的 log



systemctl list-unit-files 详解

EG.

systemctl list-unit-files

# 返回列表

第 1 列：UNIT FILE 的名称

第 2 列：当前对应的 unit 的状态
		包含：
			static	需要被其他服务激活
			disable	不会自动启动
			enable	开机自动启动
			masked	服务被 mask
			invalid	服务出错，不可用



systemctl set-default 详解

EG.

## 1 获取系统可以进入的模式

systemctl list-units --type=target --all

# 返回值有 30 行，其中与 User Interface 相关的有

# graphical.target	文字+图形界面，已包含 multi-user.target 模式
# multi-user.target	纯文字模式
# rescue.target		救援模式，systemd 会启动一个与原系统无关的系统，
					并赋予用户 root 权限，以便管理者修复系统
# emergency.target	当 rescue.target 模式也无法使用时，最后一个可以启动，并修复的模式
# shutdown.target	开始关机流程
# getty.target		与 tty 数量设置相关

# default.target	未列出的 target，表示当前默认的 target

## 2 获取当前系统开机时默认进入的 target

systemctl get-default


## 3 设置系统开机时默认进入的 target

systemctl set-default <.target>

## 4 在不重启的情况下切换 target

systemctl isolate <.target>



systemctl list-dependencies 详解

systemctl list-dependencies [-reverse] [--plain]

将以树状图形式返回 依赖关系

疑问？如果修改过系统 list-dependencies 的返回会立刻变化么？好像并不会



systemd 会使用到的其他文件

除了
	/usr/lib/systemd/system/
	/run/systemd/system/
	/etc/systemd/system/
之外

还有

/etc/sysconfig/* 服务初始的一些参数将会放置在这个目录下面

/var/lib/ 会产生不断积累的数据的服务，会将这些数据放置在这个目录下面

/run/ 各类服务的 daemon 的临时数据会存放的地方



/etc/services 存放服务于端口号对应表的地方
！不建议修改这个文件



有关服务的配置文件的详细构架，参见 17补、服务配置文件



重复的服务设置——以 tty 为例

主要管理 tty 的是 getty.target 这个 target

而实际启动 tty 的是 getty@.service 这个 service

而实际产生 tty 的是 agetty --noclear %I $TERM 这个命令


getty@.service 中的 @ 符号，指某些以 getty@ 为前缀的服务实例，会以该文件作为配置文件


查看 getty.target ，可以发现以下内容

After=getty@tty1.service

这个 After 说明：

(0) 在执行完 getty.target 之后，执行 getty@tty1.service
(1) 寻找 getty@tty1.service 的 配置文件，若未找到
(2.1) 寻找 getty@.service 的 配置文件
(2.2) 将 getty@tty1.service 这个名称中的 @ 与后缀之间的名称（也就是 tty1）
	  作为 getty@.service 服务的内置变量 %I 或 %i 传入 getty@.service 中
	  并启动服务


如果要临时新开多个 tty
可以使用以下语句

systemctl start getty@tty7.service



/etc/systemd/logind.conf 配置 tty 的个数

以下是部分文件内容

[login]
NAutoTs=6		#默认会自动启动的 TTY 数量
ReserveVT=6		#保留的可另外启动的 TTY 数量



CentOS7 常见的默认服务

abrtd 程序错误报告工具
accounts-daemon 【可关闭】由 AccountsService 提供的 Gnome Desktop 下的 通过 D-Bus 服务的 账户信息查询
alsa-* 【可关闭】音频卡相关的服务
atd 单次任务计划
auditd 与 SELinux 的 审计记录 相关
avahi-daemon 【可关闭】提供 mDNS 服务（在 Apple 中称为 Bonjour）

brandbot 各种开机检测脚本和网络控制
rhel-* 同上

chronyd 网络时间同步服务
ntpd 同上
ntpdate 同上

cpupower 检测 CPU 状态与查询 CPU 信息
crond 计划任务服务
cups 【可关闭】打印机服务，支持网络打印机
dbus 程序间信息交换服务

dm-event 设备映射表（device mapper）的主要服务
multipathd 同上

dmraid-activation 软件 RAID 相关服务
mdmonitor 同上

dracut-shutdown 处理 initramfs 相关行为，与开机流程相关
ebtables 网络桥接过滤表，规定了桥接模式下 对数据包的行为

emergency 进入紧急模式或救援模式所需要的服务
rescue 同上

firewalld 系统防火墙（取代以前的 iptables）
gdm GNOME 桌面管理器
getty@ 与 TTY 相关的服务

hyper* 【可关闭】与虚拟机相关的服务
ksm* 同上
libvirt 同上
vmtoolsd 同上

irqbalance 多核心 CPU 的硬件中断自动分配
iscsi* 挂载网络磁盘，或在机器内模拟 SAN 网络磁盘
kdump 【可关闭】记录核心 Dump
lvm2-* 与 LVM2 相关的服务
mircrocode 额外的 Inter CPU 微指令集 服务，若没有使用额外的 微指令集 可不启用

ModemManager 与网络连接和设置相关的服务
NetworkManager* 同上
network 【可关闭】被 NetworkManager 这类服务替代

quotaon 与 Quota 配额相关的服务
rc-local 老旧的 SystemV 服务启动服务
rsyslog 记录系统日志
smartd 自动检测硬盘错误，并自动向系统管理员报告错误
systat 将 sar 命令检测到的系统用量写入 系统日志中
systemd-* 最基层的系统运行所需服务

plymount* 与 GUI 相关的服务
upower 同上


其他常用的服务

dovecot 与 POP3/IMAP 电子邮件服务相关
httpd 与 www 服务相关
named 与 DNS 服务相关

nfs Unix-Like 系统下的网络磁盘服务
nfs-server 同上

smb samba 相关服务
nmb

vsftpd FTP 相关服务
sshd SSH 相关服务
rpcbind RPC 协议相关服务
postfix mail 服务，包括系统发送给 root 账户的信息
