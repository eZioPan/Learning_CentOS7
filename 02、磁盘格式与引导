Linux设备挂载位置

SCSI/SATA/USBDrive	/dev/sd[a-p]
虚拟机磁盘			/dev/vd[a-p]
USB接口的打印机		/dev/usb/lp[0-15]
鼠标				/dev/input/mouse[0-15]
当前鼠标			/dev/mouse
CDROM/DVDROM		/dev/scd[0-1]
					/dev/sr[0-1]
当前CDROM/DVDROM	/dev/cdrom

其他默认的设备名称
https://www.kernel.org/doc/Documentation/devices.txt

磁盘分割原理
1、盘面
2、磁道（track）：每个磁盘上的同心圆
2.2、磁柱（cylinder）：若有多块盘面组成磁盘，则同一垂直位置上的磁道组成磁柱
3、磁道扇区（sector）：每个磁道上的最小分区单元
4、簇（cluster）：数个扇区组成一个最小的逻辑单元

MBR分区中，每个sector固定为512byte大小
GPT分区中，每个sector的大小可以为4kbyte大小

每块磁盘的第一个扇区记录了磁盘的重要信息
在以MBR（Master Boot Record）作为分区形式的磁盘，第一扇区记录了中记录了启动信息和磁盘分区表
其中启动信息占用446bytes，磁盘分区表占用64bytes

MBR的磁盘第一个扇区的分区表可以记录四个分区表，每个分区表都记录了各自的起始磁柱的编号和结束磁柱的编号
在MBR磁盘中，可以使用EBR（Extended Boot Record）来增加逻辑分区数来拓展分区
EBR信息被记录在每个逻辑分区的分区头
一般来说，受到系统的限制，一块硬盘只能有一个扩展分区

在Linux中，对于MBR类型的硬盘
/dev/sd[a-p][1-4]是保留给主分区的
/dev/sd[a-p][5-]是给逻辑分区使用的


GPT（GUID partition table）
为了兼容512bytes和4kbytes大小的硬盘，GPT分区表使用LBA（Logical Block Address）来定义磁盘的位置
LBA从0开始编号，即LBA[0-]

LBA默认将扇区分作512bytes大小

LBA使用硬盘的前34块区块来说记录分区
同时使用硬盘的最后33块区块来备份分区表

LBA0作为MBR磁盘的兼容区块而存在，首先是放入了引导程序，接着在后面放入了GPT磁盘的标记
如果引导程序不识别GPT磁盘标记，就不会接着执行下面的命令

LBA1记录了分区表自身的大小、分区表备份的位置、分区表的校验码，如果分区表的的校验值与校验码不一致，就会从备份区恢复分区表

LBA[2-33]记录了实际的分区位置，默认情况下，每个LBA区块可以记录四个分区位置
每个分区记录占用128byte，其中有64byte用来记录开始与结束的扇区号


计算机启动流程

1、Legacy BIOS搭配MBR
（1）BIOS识别硬件设备与启动硬盘
（2）从启动硬盘的第一个扇区读取启动程序（boot loader）
（3）从boot loader中启动引导菜单、引导系统核心文件或者启动其他启动器

2、Legacy BIOS搭配GPT
（1）BIOS识别硬件设备与启动硬盘
（2）从启动硬盘的LBA0读取启动程序（boot loader）
（3）从boot loader中启动引导菜单、引导系统核心文件或者启动其他启动器

boot loader的引导菜单将会指向扇区内的引导文件或下一个系统的引导扇区，再从应道扇区指向对应的引导文件

对于MBR磁盘而言，每个分区都具有一个Boot Sector

3、UEFI BIOS搭配GPT
与Legacy BIOS搭配GPT类似

注意部分UEFI BIOS会开启secure boot来保证引导的系统必须是被UEFI验证过的，会导致部分Linux系统不能正确引导，需要关闭后才能正常使用


磁盘文件的获取——挂载（mount）

挂载就是将某一个磁盘分区制定到一个路径下面，这样这个路径就是用户访问这个磁盘分区上的文件的顶层目录

在Linux中，必须有一个分区挂载到根目录 / 下，如果有其他的目录有对应的分区，则会从对应的分区那里挂载，而非从根目录处寻找


