名称

minicom 友好的串行通信程序



语法

minicom [option] [configuration]



描述

minicom 是一个重构了共享软件 TELIX 但是是免费且提供源码的，
可以运行在大多数 Unix 系统上的通信软件
特点包括
具有重播功能的拨号目录，
支持串行设备上的 UUCP-style 锁文件，
一个分离的脚本语言解释器，
捕获至文件，
多用户独立配置，等等



命令行

-s, --setup
	配置
	用该选项以 Root 权限修改系统级别默认配置 /etc/minirc.dfl
	当使用时，minicom 并不会被初始化，而是直接将你引导至配置菜单
	对于由于系统变化导致的 minicom 拒绝启动，或者首次启动 minicom 的情况很好用
	对于大多数系统，可用的默认值已经被编译了进去

-o, --noinit
	不要初始化
	Minicom 将跳过初始化代码
	这个选项常用于若你从 minicom 退出，但没有重置，接着又希望重连一个会话时
	虽然这有隐含的危险：它不会检查锁文件等，这可能会使正常用户干扰 UUCP 这类东西……
	这个选项可能会在未来移除
	就当前，我们假设，可以接触到 modem 的用户对他们的操作有足够的责任

-m, --metakey
	用 Meta 或 ALT 键覆盖命令键
	在 1.8 中为默认选项，它同样可以在 minicom 的菜单中被配置，
	但若你总在使用不同的终端，而有些没有 Meta 或 ALT 键，
	那么可以将默认的命令键设置为 ctrl-A，而在支持 Meta 或 ALT 的键盘上使用该设置
	Minicom 假设你的 Meta 键传出 ESC 前缀，而非其他设置字符最高位的其它变种

-M, --metakey8
	与 -m 类似，但假设你的 Meta 键设置了字符高位中的第 8 个比特（发送 128+ 字符码）

-z, --statline
	使用终端状态栏
	仅在支持它且在它们的 termcap 或 terminfo 数据库条目中具有相关信息时才起效

-l, --ansi
	高位设置的字符被文本翻译
	设置了这个标旗，minicom 将尝试将 IBM 行字符翻译为 ASCII
	很多 PC-unix 将会正确显示字符而无需转换（Linux in a special mode, Coherent and SCO）

-L, --iso
	同上，但假设屏幕使用了 ISO8859 字符集

-W, --wrap
	默认启动时就启用自动换行

-H, --displayhex
	启动十六进制显示模式

-a, --attrib=on/off
	属性使用
	有些终端，特别是 Televideo，不具备完整的属性处理（串行而非并行）
	默认情况，minicom 使用 '-a on'，但如果你使用这样的终端，
	你可以（必须！）使用选项 '-a off'
	末尾的 'on' 或者 'off' 是必须有的

-t, --term=TERM
	终端类型
	用了这个标旗，你可以覆盖 TERM 环境变量；
	可以在 console 上为 minicom 创建一个特殊的 termcap 条目，
	让屏幕以 raw 模式初始化，同时连用 -l，让 IBM 行字符以未翻译的状态显示

-c， --color=on/off
	颜色使用
	部分终端（比如 Linux console）支持标准 ANSI 转义字符串表示颜色
	但几乎没有 termcap 支持颜色，这些转义字符将以硬编码的方式进入 minicom，
	所以这个选项默认为 off
	你可以用 '-c on' 来打开它
	这个选项，以及 -m 选项，都是放入 MINICOM 环境变量里的不错的备选项

-S, --script=SCRIPT
	脚本
	在启动时运行指定的脚本文件
	到目前为止，还不支持传入用户名和密码
	如果你同样使用了 -d 选项在启动时拨号，
	那么 -S 脚本将 先于 -d 拨号条目执行

-d, --dial=ENTRY
	在启动时，从拨号目录中选一个条目拨号
	你可以指定一个索引号，但也可以使用条目的名称的部分字符串
	若你指定的名称可以匹配上目录中多个条目，则它们全部被拨号
	你同样可以用逗号分隔来指定多个名称或索引号
	当所有其他程序初始化过程结束之后，开始拨号指定的第一个条目

-p, --putty=TTYP
	使用的伪终端
	这覆盖了配置文件中定义的终端端口，这个端口仅能是伪终端
	支持的文件名必须具有以下的格式
	(/dev/)tty[p-z/][0-f]
	(/dev/)pts[p-z/][0-f]
	(/dev/)pty[p-z/][0-f]
	举例来说，
	/dev/ttyp1
	pts/0
	/dev/ptyp2

-C, --capturefile=FILE
	文件名
	在启动时打开捕获文件

-T, --disabletime
	关闭在状态栏显示的上线时间

-b, --baudrate
	指定波特率，覆盖配置文件中的值

-D, --device
	指定设备，覆盖配置文件中的值

-R, --remotecharset
	指定远程系统使用的字符集，并将其转变为本地的字符集
	举例：'latin1'

-7, --7bit
	若终端不支持 8bit，则使用 7bit 模式
	若通过环境 LANG 或 LC_ALL 配置，则默认为 8bit，其他情况为 7bit

-8, --8bit
	8bit 字符直接传递不经修改
	'Continuous' 意味着要插入 locate/attribute 控制序列就一定会修改实际的 locate/attribute
	这个模式用于显示 8bit 多字节字符，比如日语
	并不是每种使用 8bit 字符的语言都需要的（比如显示芬兰语就不需要）

-h, --help
	显示帮助并退出

-v, --version
	打印 minicom 的版本


当 minicom 启动时，它首先搜索 MINICOM 环境变量，来寻找命令行参数，
而这些参数可以在命令行中被覆盖
假设你已经这样设置：

	MINICOM='-m -c on'
	export MINICOM

或等价的设置，并启动 minicom，minicom 会假设你的终端具有 Meta 或 ALT 键，且支持颜色显示
如果你之后从一个不支持不支持颜色的终端登录，
且你已经在你的启动脚本中（.profile 或等价物）设置了 MINICOM 变量，
又不希望重置你的环境变量，
则直接输入 'minicom -c off' 将当前对话设置为无色模式


configuration
	配置参数则更加有趣
	通常来说，minicom 从一个叫 'minirc.dfl' 的文件中读取默认值
	如果你给了 minicom 设置了这个参数，
	它将尝试用名为 'minirc.configuration' 的文件中读取默认值
	这样就允许创建多个配置文件，来应对不同的端口，不同的用户等等
	最可行的方案是使用设备名，比如 tty1 tty64 sio2 等等
	若一个用户创建了他自己的配置文件，
	它将在它的主目录，以
	'.minirc.dfl'
	或
	'.minirc.configuration'
	出现



使用

Minicom 是基于窗口的
要弹出你所需要的功能窗口，请请按 Control-A（从现在开始，我们使用 C-A 表示 Control-A），
接着按一个功能键（a-z 或 A-Z）
首先按 C-A，接着按 'z'，会出现一个帮助屏幕，其中有所有命令的简短说明
当 minicom 被配置后，这个转义键可以被修改（-s 选项，或者 C-A O），但现在我们先用 Control-A

对于每个菜单，下一个可用按键为：

上		上方向键 或者 'k'
下		下方向键 或者 'j'
左		左方向键 或者 'h'
右		右方向键 或者 'l'
选择		回车键
取消		ESC 键


屏幕被分为两部分：

上面 24 行用于终端模拟屏幕
在这个窗口中，ANSI 或 VT100 转义序列被解析
若在底部还剩余一行，则状态栏在此显示
若不可能，则状态栏将在你每次按 C-A 时显示
若终端具有完整的 twemcap 信息，且 -k 被指定，则特定的状态栏将被使用
