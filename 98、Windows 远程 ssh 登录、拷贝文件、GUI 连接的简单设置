Windows 远程 ssh 登录，远程文件传输，远程 GUI 的，简单设置



以 PuTTY 连接远程 CLI

0.0 在 CentOS 中输入 sudo ps -e | grep "ssh"
	查看是否有 ssh 进程在运行
	若没有则用
	systemctl start ssh 启动
	（systemctl stop ssh 可关闭这个服务）
	若没有安装 ssh server
	则使用 yum install openssh-server 安装

0.1 修改 /etc/ssh/sshd_config 配置部分参数
	默认只需要取消 PermitRootLogin yes 前的注释即可

0.2 为了在 DHCP 服务下以 <user>@<hostname>.local 的形式远程连接 CentOS，可以让 mDNS 通过防火墙
	firewall-cmd --permanent --zone=public --add-service=mdns
	firewall-cmd --reload

	如果在 Windows 上登录，请下载 iTunes 安装包，用 7zip 解包，并安装其中的 Bonjour.msi


1.0 下载 PuTTY

1.1 若使用 VBox 虚拟机，请修改 虚拟机 设置--网络--网卡1--连接方式：桥接网卡

3.0 打开 PuTTY，选择 左侧 Session 标签，在右侧的 Host Name (or IP address) 中输入 CentOS 的主机名（hostname）
	并在下方的 Saved Sessions 中输入名称并按 Save 保存设置

3.1 点击下方的 Open，就启动了 SSH 的终端，接着就可以正常登陆了


# 注意事项（IPv4）
# 在登录后， CentOS 会记录远程登录的 IP 地址，若要使用 IPv4 地址
# 请修改 Putty 上 Connection 选项卡 Internet protocol version 为 IPv4


# 注意事项（vim 使用）
# 若要在从 putty 登录的状态下正常使用 Numpad 数字小键盘
# 将 Terminal -- Features -- Disable application keypad mode 勾选即可


# PuTTY 远程管理的好处
# 1 可以在任意电脑上管理服务器
# 2 可以在 CLI 中显示多国语言



以 PSCP 向远端传输文件

1、下载 PSCP

2、在 cmd 中执行 pscp <源用户名>@<源主机地址>:<源文件名> <目标用户名>@<目标主机地址>:<目标文件夹> 来传输文件
	若某个主机为 本地主机 则不需要输入 用户名 和 主机地址
	路径的书写方法 为 自身文件 所在系统 的输入方法

eg.

# 将文件从 本地 Windows 的 D:\transferfile.txt 拷贝至 远程 192.168.101 的 /home/ep/Desktop 下

# 在 Windows 的 cmd 中输入

pscp D:\transferfile.txt ep@192.168.1.101:/home/ep/Desktop/

# 会提示输入用户 ep 的密码，验证成功后，文件就会自动传输

# 注意， pscp 不会检查目标路径剩余的空间大小，所以要先用 df -h 检查目标位置的剩余容量再拷贝文件



以 Xming 开启 远程 GUI 模式

0、修改 远程服务器 上 /etc/ssh/sshd_config 文件
	确保 X11Forwarding yes 未被注释

1.0 下载并安装 Xming
	安装时，若已有 PuTTY，则选择 Don't install an SSH client 选项

1.1 安装结束后会进入 Xming 的 Settings

	注意第一个页面的 Display number 中输入的数字

	第二个页面选择是否启动内部的 SSH client
	若已提前安装 PuTTY 或已提前启动 PuTTY
	则选择 Start no client
	否则选择 Start a program

2、安装成功后 Xming Server 将在 任务栏 的 系统托盘区 出现
	鼠标悬停在图标上会出现类似 Xming Server:0.0 的字样

3.0 打开 PuTTY，Load 以前配置过的 Session

3.1	切换 左侧标签 至 SSH--X11
	勾选 Enable X11 forwarding
	并在下方的 X displaylocation 中输入 localhost:<Display number>

	Save 这个 Session

4、在正常使用 PuTTY 登录后，就可以在命令行中直接执行带 GUI 的程序，GUI 就会出现在本地屏幕了

# 目前无法成功启用 gnome-session 这个桌面程序，原因和解决方法未知



PuTTY 使用 SSH Key 免密登录

原理

1、将 RSA 的 公钥 传保存在 服务器 端，将 RSA 的 私钥 保存在 客户机 端
2、每次登陆时，服务器 向 客户端 发送一段 随机数据，客户机使用 私钥 加密，并传回 服务器
3、服务器 使用 公钥 进行解密，若成功解密，且与原始数据相同，则认证成功

优势


1、不用每次都输入密码，简化了操作，同时也保证了安全


注意

1、PuTTY 和 OpenSSH 使用的 SSH Key 有不一样的格式（即使加密方式相同）
2、Linux 自带的 sshd 使用的是 OpenSSH，所以在生成和使用秘钥的时候需要注意转换文件的问题


方案1：在 Windows 上生成秘钥

1、下载 PuTTYgen
2、在 PuTTYgen 的 Parameters 面板中选择 SSH-2 RSA 这种加密方式
3、点击 Actions 面板中的 Generate，并在界面中随意晃动鼠标，产生随机数，来生成 Key
4、将 Key 文本框中 以 "ssh-rsa" 开头的所有文字另存为 Public Key 文件
5、点击 Actions 面板中的 Save private key 来保存 PuTTY 可识别的 Private Key
6、将 Public Key 传输至 服务器 要登录账户的 主目录 下的 .ssh 目录下，并将 文件内容追加至 authorized_keys 的文件尾部
7、将 authorized_keys 的权限修改为 0600
   将 .ssh 文件夹的权限修改为 0700
8、systemctl restart sshd 重启 sshd 服务
9、在 PuTTY 的 Connection--SSH--Auth--Private key... 中选取刚才生成的 Private Key，并保存设置


方案2：在 Linux 上生成秘钥

1、使用 ssh-keygen 命令产生 Public Key 和 Private Key
2、将 Public Key 移动至 要登录账户 主目录下 .ssh 中，并追加至 authorized_keys 文件末尾
3、将 authorized_keys 的将权限设置为 0600
   将 .ssh 文件夹的权限设置为 0700
4、systemctl restart sshd 重启 sshd 服务
5、将 Private Key 传输至 客户端
6、使用 PuTTYgen 的 Actions 面板--Load an exisiting... 读取 Private Key，使用 Save Private key 保存为 PuTTY 可以识别的 pkk 文件
7、在 PuTTY 的 Connection--SSH--Auth--Private key... 中选取刚才生成的 Private Key，并保存设置
