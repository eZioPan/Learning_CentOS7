Shell Script如果读取到 <CR> 就尝试执行该命令



.sh 文件可以通过 赋予 rx 权限直接执行
或者通过 sh shell.sh 或 bash shell.sh 来执行


sh的文件结构


【1】sh文件的第一行

#!/bin/bash 指定了文件该用哪个 shell 执行，同时也指定了该用什么环境变量来执行（也就是 ~/.bashrc）


【2】sh 开头最好写注释

注释内容包括

1、版本与功能
2、版本信息
3、作者和联系方式
4、建立时间
5、历史记录


【3】定义环境变量

比如 PATH 和 LANG


【4】程序主要部分


【5】程序结束返回码

exit 0



使用 sh shellscript.sh 或直接执行 ./shellscript.sh 时，会创建一个新的 shell 进程来执行这些操作

而使用 source shellscript.sh 或 . shellscript.sh 来执行命令时，shellscript.sh 的内容会直接在当前进程中执行



条件测试命令

test <options>

(1) 文件类型判断，形如 test -e <filename>

-e	文件名是否存在					（exist）
-f	文件名是否存在，且为 普通文件	（file）
-d	文件名是否存在，且为 目录		（directory）
-b	文件名是否存在，且为 块设备		（block）
-c	文件名是否存在，且为 字符流设备	（character）
-S	文件名是否存在，且为 套字节文件	（socket）
-p	文件名是否存在，且为 管线文件	（FIFO,pipe）
-L	文件名是否存在，且为 符号链接	（symbolic link）

(2) 文件权限判断，形如 test -r <filename>
-r	文件名是否存在，且当前用户具有 可读 权限
-w	文件名是否存在，且当前用户具有 可写 权限
-x	文件名是否存在，且当前用户具有 可执行 权限
-u	文件名是否存在，且具有 SUID 属性
-g	文件名是否存在，且具有 SGID 属性
-k	文件名是否存在，且具有 Sticky Bit 属性
-s	文件名是否存在，且文件大小不为 0

(3) 文件间的比较，形如 test <file1> -nt <file2>
-nt	<file1> 是否比 <file2> 新
-ot <file1> 是否比 <file2> 旧
-ef <file1> 和 <file2> 最终是否指向同一个文件（符号链接也可以）
